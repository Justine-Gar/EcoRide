
services:
  #Service PHP
  php:
    build:
      context: .  #Répertoire racine
      dockerfile: docker/php/Dockerfile #Chemin vers le dockerfil
    volumes: #Montage du code source
      - .:/var/www/symfony
    depends_on: #Dépend du service database
      - database
    networks: #Resaux paratgé
      - symfony
    environment:
      PHP_MEMORY_LIMIT: "256M"
    image: php:fpm
    ports:
      - "9000:9000"

  #Serveur Web Nginx
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"  #Port(conteneur local)
      - "443:443"
    volumes:
      - .:/var/www/symfony  #Montage CS
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf  #config Nginx
    depends_on:
      - php
    networks:
      - symfony

  #Service base de donnée MYSQL
  database:
    image: mysql:8.0
    environment: #Varable env MySQL
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ecoride
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./config/sql:/docker-entrypoint-initdb.d
    networks:
      - symfony
    command: --default-authentication-plugin=mysql_native_password
    restart: always

    ##Use phpADMIN
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
        - "8081:80"
    environment:
        PMA_HOST: database
        MYSQL_ROOT_PASSWORD: root
        PMA_USER: root
        PMA_PASSWORD: root
    depends_on:
        - database
    networks:
        - symfony
        
#Définision des réseaux


networks:
  symfony:  #réseau isolé pour les conteneurs
  
#Définition des volumes persistants
volumes:
  db-data:  #volume pour les données MySQL
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
